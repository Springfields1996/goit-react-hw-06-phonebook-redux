{"version":3,"sources":["styles/style.module.css","styles/header-style.module.css","redux/actions/filterAction.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App.js","redux/actions/contactActions.js","redux/actions/deleteAction.js","redux/reduces/contactReducer.js","redux/store.js","index.js","redux/types.js"],"names":["module","exports","FILTER_CONTACTS","require","Form","props","useState","name","number","state","setState","handleChange","target","value","onSubmit","evt","preventDefault","id","uuidv4","alert","className","style","form","formLabel","formInput","type","placeholder","onChange","formInput2","addButton","Contacts","contact","onDeleteContact","contactList","key","deleteButton","onClick","Filter","marginLeft","App","showNotification","getContact","contacts","find","elem","setTimeout","addContact","deleteContact","deleteContacts","filter","setFilter","filterContacts","render","console","log","filteredContacts","el","toLowerCase","includes","length","main","CSSTransition","in","appear","timeout","classNames","headerStyle","unmountOnExit","header","existNotification","noContacts","TransitionGroup","component","list","map","prevProps","this","localStorage","setItem","JSON","stringify","React","Component","connect","ADD_CONTACT","payload","DELETE_CONTACT","initialState","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7653820.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__3XXdu\",\"formLabel\":\"style_formLabel__19PWf\",\"formInput\":\"style_formInput__28AEo\",\"formInput2\":\"style_formInput2__2CJKX\",\"header\":\"style_header__2gc1M\",\"main\":\"style_main__2QxJa\",\"addButton\":\"style_addButton__fpJyJ\",\"deleteButton\":\"style_deleteButton__bIkAB\",\"list\":\"style_list__3lbZ-\",\"contactList\":\"style_contactList__2Tz0Q\",\"noContacts\":\"style_noContacts__1Mv0x\",\"existNotification\":\"style_existNotification__2qSc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"header-style_appear__2dRRG\",\"appearActive\":\"header-style_appearActive__31SV4\"};","const { FILTER_CONTACTS } = require('../types');\n\nexport const filterContacts = filter => ({\n  type: FILTER_CONTACTS,\n  payload: filter,\n});\n","import React, { useState } from 'react';\n// import { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n// import { addContact } from '../../redux/actions/contactActions';\nimport style from '../../styles/style.module.css';\n\nexport const Form = props => {\n  const [state, setState] = useState({ name: '', number: '' });\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (state.name && state.number) {\n      props.onSubmit({ id: uuidv4(), ...state });\n      setState(state => {\n        return { ...state, name: '', number: '' };\n      });\n    } else {\n      alert('Fill all fields!');\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(state => {\n      return { ...state, [name]: value };\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.form}>\n      <label className={style.formLabel}>\n        Name\n        <input\n          className={style.formInput}\n          type=\"text\"\n          placeholder=\"Enter name\"\n          name=\"name\"\n          value={state.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={style.formLabel}>\n        Number\n        <input\n          className={style.formInput2}\n          type=\"text\"\n          placeholder=\"Enter number\"\n          name=\"number\"\n          value={state.number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={style.addButton}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\n// const mapStateToProps = state => {\n//   return { contacts: state.contacts };\n// };\n\n// // const mapDispatchToProps = dispatch => ({\n// //   addContact: contact => dispatch(addContact(contact)),\n// // });\n\n// export default connect(mapStateToProps, { addContact })(Form);\n","import React from 'react';\nimport style from '../../styles/style.module.css';\nimport '../../styles/contactsStyle.css';\n\nexport const Contacts = ({ contact, onDeleteContact }) => (\n  <li className={style.contactList} key={contact.id}>\n    {contact.name}: {contact.number}\n    <button\n      className={style.deleteButton}\n      id={contact.id}\n      type=\"button\"\n      onClick={onDeleteContact}\n    >\n      Delete\n    </button>\n  </li>\n);\n","import React from 'react';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        Sort by name\n        <input\n          style={{ marginLeft: 15 }}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { addContact } from '../redux/actions/contactActions';\nimport { filterContacts } from '../redux/actions/filterAction';\nimport { deleteContacts } from '../redux/actions/deleteAction';\n\nimport { connect } from 'react-redux';\nimport { Form } from './Form/Form';\nimport { Contacts } from './Contacts/Contacts';\nimport { Filter } from './Filter/Filter';\nimport headerStyle from '../styles/header-style.module.css';\nimport '../styles/filterAnimation.css';\nimport style from '../styles/style.module.css';\n\nclass App extends React.Component {\n  state = {\n    showNotification: false,\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    prevProps.contacts !== this.props.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(this.props.contacts));\n  }\n\n  getContact = contact =>\n    this.props.contacts.find(elem => elem.name === contact.name)\n      ? (this.setState({ showNotification: true }),\n        setTimeout(() => {\n          this.setState({ showNotification: false });\n        }, 2000))\n      : this.props.addContact(contact);\n\n  deleteContact = ({ target: { id } }) => {\n    this.props.deleteContacts([\n      ...this.props.contacts.filter(elem => elem.id !== id),\n    ]);\n  };\n\n  setFilter = ({ target }) => this.props.filterContacts(target.value);\n\n  render = () => {\n    console.log(this.props);\n    const { contacts, filter } = this.props;\n    const { showNotification } = this.state;\n\n    const filteredContacts = contacts.filter(el =>\n      el.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n\n    setTimeout(() => {\n      !filteredContacts.length && this.props.filterContacts('');\n    }, 1500);\n\n    return (\n      <div className={style.main}>\n        <CSSTransition\n          in={true}\n          appear\n          timeout={500}\n          classNames={headerStyle}\n          unmountOnExit\n        >\n          <h2 className={style.header}>Phonebook</h2>\n        </CSSTransition>\n        <CSSTransition\n          in={showNotification}\n          timeout={500}\n          classNames=\"notification\"\n          unmountOnExit\n        >\n          <div className={style.existNotification}>\n            This name is already exist\n          </div>\n        </CSSTransition>\n        <Form onSubmit={this.getContact} />\n        <h2 className={style.header}>Contacts</h2>\n        {contacts.length ? (\n          <CSSTransition\n            in={contacts.length > 1}\n            timeout={300}\n            classNames=\"filter\"\n            unmountOnExit\n          >\n            <Filter value={filter} onChange={this.setFilter} />\n          </CSSTransition>\n        ) : (\n          <p className={style.noContacts}>No contacts yet...</p>\n        )}\n        <TransitionGroup component=\"ul\" className={style.list}>\n          {filteredContacts.map(elem => (\n            <CSSTransition key={elem.id} timeout={250} classNames=\"form\">\n              <Contacts contact={elem} onDeleteContact={this.deleteContact} />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\n// const mapDispatchToProps = dispatch => ({\n//   addContact: contact => dispatch(addContact(contact)),\n// });\n\nexport default connect(mapStateToProps, {\n  addContact,\n  filterContacts,\n  deleteContacts,\n})(App);\n\n// export const App = () => {\n//   const [state, setState] = useState({ contacts: [], filter: '' });\n\n//   useEffect(() => {\n//     // console.log(state, state);\n//     const localContacts = localStorage.getItem('contacts');\n//     if (localContacts) {\n//       setState({ contacts: JSON.parse(localContacts) });\n//     } else {\n//       return;\n//     }\n//   }, []);\n\n//   useEffect(() => {\n//     // prevContacts.contacts !== state.contacts &&\n//     localStorage.setItem('contacts', JSON.stringify(state.contacts));\n//   }, [state.contacts]);\n\n//   // useEffect(() => {\n//   //   const contactsLocal = localStorage.getItem('contacts');\n\n//   //   if (contactsLocal) {\n//   //     const parsedContacts = JSON.parse(contactsLocal);\n//   //     this.setState({ contacts: parsedContacts });\n//   //   } else {\n//   //     return;\n//   //   }\n\n//   // }, [])\n\n//   const getContact = contact =>\n//     setState({ ...state, contacts: [...state.contacts, contact] });\n\n//   const deleteContact = ({ target: { id } }) => {\n//     setState({\n//       ...state,\n//       contacts: [...state.contacts.filter(elem => elem.id !== id)],\n//     });\n//   };\n\n//   const setFilter = ({ target }) =>\n//     setState({ ...state, filter: target.value });\n\n//   const filteredContacts = state.contacts.filter(el =>\n//     el.name.toLowerCase().includes(state.filter.toLowerCase()),\n//   );\n\n//   setTimeout(() => {\n//     !filteredContacts.length && setState({ ...state, filter: '' });\n//   }, 2000);\n\n//   return (\n//     <div>\n//       <h2>Phonebook</h2>\n//       <Form getContact={getContact} />\n//       <h2>Contacts</h2>\n//       <Filter value={state.filter} onChange={setFilter} />\n//       <ul style={{ marginTop: 40 }}>\n//         <Contacts contacts={filteredContacts} onDeleteContact={deleteContact} />\n//       </ul>\n//     </div>\n//   );\n// }\n","import { ADD_CONTACT } from '../types';\n\nexport const addContact = contact => {\n  return {\n    type: ADD_CONTACT,\n    payload: contact,\n  };\n};\n","import { DELETE_CONTACT } from '../types';\n\nexport const deleteContacts = contacts => ({\n  type: DELETE_CONTACT,\n  payload: contacts,\n});\n","import { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACTS } from '../types';\n\nconst initialState = {\n  contacts: [],\n  filter: '',\n};\n\nexport const reducer = (state = { ...initialState }, { type, payload }) => {\n  switch (type) {\n    case ADD_CONTACT:\n      return { ...state, contacts: [...state.contacts, payload] };\n\n    case FILTER_CONTACTS:\n      return { ...state, filter: payload };\n\n    case DELETE_CONTACT:\n      return { ...state, contacts: payload };\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reduces/contactReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(persistedReducer, composeWithDevTools());\n\npersistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","const ADD_CONTACT = 'contacts/ADD';\nconst FILTER_CONTACTS = 'contacts/FILTER';\nconst DELETE_CONTACT = 'contacts/DELETE';\n\nexport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACTS };\n"],"sourceRoot":""}